<Application x:Class="CompresPDF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CompresPDF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Custom style for minimize, maximize and close buttons-->
        <ControlTemplate x:Key="CustomButtonTemplateNormal" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="#FFF0F0F0" BorderBrush="#FF707070" BorderThickness="1" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="#d3d3d3"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="#b3b3b3"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF707070"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CustomButtonTemplateClose" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="#FFF0F0F0" BorderBrush="#FF707070" BorderThickness="1" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="#e81123"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="#df657a"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF707070"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Custom Style for the Menu Initiator Button -->
        <Style x:Key="InitiatorButtonStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background" Value="#FFF0F0F0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="#FF707070" BorderThickness="1" CornerRadius="0" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#d3d3d3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#b3b3b3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Custom Button Style for Drop-Down Menu -->
        <Style x:Key="CustomDropDownButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FFF0F0F0"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="-1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" IsHitTestVisible="False"
                                                  Content="{TemplateBinding Tag}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" IsHitTestVisible="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#d3d3d3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#b3b3b3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Cross-binding the height and width from the parent -->
            <Setter Property="Height">
                <Setter.Value>
                    <Binding Path="Height" RelativeSource="{RelativeSource AncestorType={x:Type Popup}}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Width">
                <Setter.Value>
                    <Binding Path="Width" RelativeSource="{RelativeSource AncestorType={x:Type Popup}}"/>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
